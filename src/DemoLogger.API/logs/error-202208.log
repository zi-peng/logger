2022-08-02 12:08:23.116 <> [FTL] Host terminated unexpectedly
System.InvalidOperationException: You must be config storage provider for CAP!
===================================================================================
========   eg: services.AddCap( options => { options.UseSqlServer(...) }); ========
===================================================================================
   at DotNetCore.CAP.Internal.Bootstrapper.CheckRequirement()
   at DotNetCore.CAP.Internal.Bootstrapper.BootstrapAsync()
   at DotNetCore.CAP.Internal.Bootstrapper.ExecuteAsync(CancellationToken stoppingToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at Microsoft.AspNetCore.Builder.WebApplication.Run(String url)
   at Program.<Main>$(String[] args) in D:\StudySpace\logger\src\DemoLogger.API\Program.cs:line 41
2022-08-03 17:59:08.735 <> [ERR] 处理事务出错 AddLoggInfoCommand ({"Title":"标题","Content":"内容","$type":"AddLoggInfoCommand"})
System.InvalidOperationException: Error constructing handler for request of type MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]. Register your handlers with the container. See the samples in GitHub for examples.
 ---> System.InvalidOperationException: No service for type 'MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at MediatR.ServiceFactoryExtensions.GetInstance[T](ServiceFactory factory)
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   --- End of inner exception stack trace ---
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 50
--- End of stack trace from previous location ---
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 56
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c.<<ExecuteAsync>b__3_0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 41
2022-08-03 17:59:08.867 <> [ERR] ERROR Handling for DemoLogger.Application.Commands.AddLoggInfoCommand ({"Title":"标题","Content":"内容","$type":"AddLoggInfoCommand"})
System.InvalidOperationException: Error constructing handler for request of type MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]. Register your handlers with the container. See the samples in GitHub for examples.
 ---> System.InvalidOperationException: No service for type 'MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at MediatR.ServiceFactoryExtensions.GetInstance[T](ServiceFactory factory)
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   --- End of inner exception stack trace ---
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 50
--- End of stack trace from previous location ---
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 56
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c.<<ExecuteAsync>b__3_0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 41
   at Common.Infrastructure.Core.Behavior.Exceptions.ExceptionBehaviour`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\Exceptions\ExceptionBehaviour.cs:line 29
2022-08-03 17:59:08.935 <> [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Error constructing handler for request of type MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]. Register your handlers with the container. See the samples in GitHub for examples.
 ---> System.InvalidOperationException: No service for type 'MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at MediatR.ServiceFactoryExtensions.GetInstance[T](ServiceFactory factory)
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   --- End of inner exception stack trace ---
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 50
--- End of stack trace from previous location ---
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 56
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c.<<ExecuteAsync>b__3_0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 41
   at Common.Infrastructure.Core.Behavior.Exceptions.ExceptionBehaviour`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\Exceptions\ExceptionBehaviour.cs:line 29
   at DemoLogger.API.Controllers.WeatherForecastController.Get() in D:\StudySpace\logger\src\DemoLogger.API\Controllers\WeatherForecastController.cs:line 33
   at lambda_method5(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-08-03 17:59:18.057 <> [ERR] 处理事务出错 AddLoggInfoCommand ({"Title":"标题","Content":"内容","$type":"AddLoggInfoCommand"})
System.InvalidOperationException: Error constructing handler for request of type MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]. Register your handlers with the container. See the samples in GitHub for examples.
 ---> System.InvalidOperationException: No service for type 'MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at MediatR.ServiceFactoryExtensions.GetInstance[T](ServiceFactory factory)
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   --- End of inner exception stack trace ---
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 50
--- End of stack trace from previous location ---
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 56
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c.<<ExecuteAsync>b__3_0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 41
2022-08-03 17:59:18.101 <> [ERR] ERROR Handling for DemoLogger.Application.Commands.AddLoggInfoCommand ({"Title":"标题","Content":"内容","$type":"AddLoggInfoCommand"})
System.InvalidOperationException: Error constructing handler for request of type MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]. Register your handlers with the container. See the samples in GitHub for examples.
 ---> System.InvalidOperationException: No service for type 'MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at MediatR.ServiceFactoryExtensions.GetInstance[T](ServiceFactory factory)
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   --- End of inner exception stack trace ---
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 50
--- End of stack trace from previous location ---
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 56
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c.<<ExecuteAsync>b__3_0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 41
   at Common.Infrastructure.Core.Behavior.Exceptions.ExceptionBehaviour`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\Exceptions\ExceptionBehaviour.cs:line 29
2022-08-03 17:59:18.153 <> [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Error constructing handler for request of type MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]. Register your handlers with the container. See the samples in GitHub for examples.
 ---> System.InvalidOperationException: No service for type 'MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at MediatR.ServiceFactoryExtensions.GetInstance[T](ServiceFactory factory)
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   --- End of inner exception stack trace ---
   at MediatR.Wrappers.HandlerBase.GetHandler[THandler](ServiceFactory factory)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 50
--- End of stack trace from previous location ---
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.<>c__DisplayClass3_0.<<Handle>b__0>d.MoveNext() in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 56
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c.<<ExecuteAsync>b__3_0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Common.Infrastructure.Core.Behavior.TransactionBehavior`3.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\TransactionBehavior.cs:line 41
   at Common.Infrastructure.Core.Behavior.Exceptions.ExceptionBehaviour`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next) in D:\StudySpace\logger\src\BuildingBlocks\Common.Infrastructure.Core\Behavior\Exceptions\ExceptionBehaviour.cs:line 29
   at DemoLogger.API.Controllers.WeatherForecastController.Get() in D:\StudySpace\logger\src\DemoLogger.API\Controllers\WeatherForecastController.cs:line 33
   at lambda_method5(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2022-08-03 18:00:54.999 <> [FTL] Host terminated unexpectedly
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean] Lifetime: Transient ImplementationType: DemoLogger.Application.Commands.AddLoggInfoCommandHandler': Unable to resolve service for type 'Logger.Domain.Aggregates.Logger.ILoggerInfoRepository' while attempting to activate 'DemoLogger.Application.Commands.AddLoggInfoCommandHandler'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean] Lifetime: Transient ImplementationType: DemoLogger.Application.Commands.AddLoggInfoCommandHandler': Unable to resolve service for type 'Logger.Domain.Aggregates.Logger.ILoggerInfoRepository' while attempting to activate 'DemoLogger.Application.Commands.AddLoggInfoCommandHandler'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Logger.Domain.Aggregates.Logger.ILoggerInfoRepository' while attempting to activate 'DemoLogger.Application.Commands.AddLoggInfoCommandHandler'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in D:\StudySpace\logger\src\DemoLogger.API\Program.cs:line 26
2022-08-03 18:03:47.340 <> [FTL] Host terminated unexpectedly
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean] Lifetime: Transient ImplementationType: DemoLogger.Application.Commands.AddLoggInfoCommandHandler': Unable to resolve service for type 'Logger.Domain.Aggregates.Logger.ILoggerInfoRepository' while attempting to activate 'DemoLogger.Application.Commands.AddLoggInfoCommandHandler'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MediatR.IRequestHandler`2[DemoLogger.Application.Commands.AddLoggInfoCommand,System.Boolean] Lifetime: Transient ImplementationType: DemoLogger.Application.Commands.AddLoggInfoCommandHandler': Unable to resolve service for type 'Logger.Domain.Aggregates.Logger.ILoggerInfoRepository' while attempting to activate 'DemoLogger.Application.Commands.AddLoggInfoCommandHandler'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Logger.Domain.Aggregates.Logger.ILoggerInfoRepository' while attempting to activate 'DemoLogger.Application.Commands.AddLoggInfoCommandHandler'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in D:\StudySpace\logger\src\DemoLogger.API\Program.cs:line 26
